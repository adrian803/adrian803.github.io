(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{281:function(t,s,a){"use strict";a.r(s);var e=a(14),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"技术架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#技术架构"}},[t._v("#")]),t._v(" 技术架构")]),t._v(" "),s("p",[s("strong",[t._v("VuePresss+GitHub Pages+picgo+腾讯云对象存储+任意Markdown编辑器 （个人推荐"),s("a",{attrs:{href:"https://typora.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Typora"),s("OutboundLink")],1),t._v(","),s("a",{attrs:{href:"https://obsidian.md/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Obsidian"),s("OutboundLink")],1),t._v(","),s("a",{attrs:{href:"https://yanknote.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yank Note"),s("OutboundLink")],1),t._v(")+git")])]),t._v(" "),s("p",[t._v("利用 VuePresss 组件可以将 Markdown 语法转换成静态网页的优点配合 GitHub Pages 免费存放静态网页的有点可以做到 0 成本构建一个个人知识库，缺点是访问速度可能比较慢，而 picgo 和腾讯云对象存储二者合一做到图床的效果可以使知识库的图片传输速度达到一个提升正好弥补了访问速度的缺点。而我推荐的三款 Markdown 编辑器又正好支持将图片自动上传到图床并且转换链接，配合 git 简单的推送机制，这样一个属于自己的个人知识库就搭建完成了。并且插入的图片因为是使用图床的原因使用可以直接复制 md 文件进意见多平台发布。")]),t._v(" "),s("h1",{attrs:{id:"前期准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前期准备"}},[t._v("#")]),t._v(" 前期准备")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("node")])]),t._v(" "),s("li",[s("p",[t._v("git")])]),t._v(" "),s("li",[s("p",[t._v("GitHub 账号")])]),t._v(" "),s("li",[s("p",[t._v("腾讯云对象存储")])])]),t._v(" "),s("h1",{attrs:{id:"一、picgo-图床搭建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、picgo-图床搭建"}},[t._v("#")]),t._v(" 一、PicGo 图床搭建")]),t._v(" "),s("h2",{attrs:{id:"安装-picgo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-picgo"}},[t._v("#")]),t._v(" 安装 PicGo")]),t._v(" "),s("p",[s("strong",[t._v("PicGo 是一个用于快速上传图片并获取图片 URL 链接的工具")]),t._v("，支持腾讯云 COS、七牛图床、Github 图床、又拍云图床、SM.SM 等。")]),t._v(" "),s("p",[t._v("我们以 Windows 为例，首先访问 Github 仓库去下载（"),s("a",{attrs:{href:"https://github.com/Molunerfinn/PicGo/releases%22",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击跳转"),s("OutboundLink")],1),t._v("）客户端安装包，找到自己"),s("s",[t._v("最新版")]),t._v("自己看着顺眼的版本，找到对应平台的安装包，点击下载：\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303182311400.webp",alt:"Img"}}),t._v("\n下载之后正常安装即可")]),t._v(" "),s("h2",{attrs:{id:"安装-webp-插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-webp-插件"}},[t._v("#")]),t._v(" 安装 webp 插件")]),t._v(" "),s("p",[t._v("PicGo 有一系列好用的插件，帮助扩展功能，比如压缩图片、添加水印等等。本文将以 "),s("strong",[t._v("webp 插件")]),t._v("为例，演示如何在 PicGo 中使用插件。")]),t._v(" "),s("p",[s("strong",[t._v("webp")]),t._v(" 插件会在图片上传前将图片转为 "),s("code",[t._v(".webp")]),t._v(" 格式，它相比于传统的 "),s("code",[t._v(".jpg")]),t._v("、"),s("code",[t._v(".png")]),t._v(" 等格式，同等体积质量更高，同等质量体积更小。图片经过压缩之后再上传至 COS，对于节省存储空间，节省流量都很有帮助。如果对图片格式有特殊要求，不希望转换格式，可以省略这一步。")]),t._v(" "),s("p",[t._v("打开 PicGo，进入插件设置，在搜索栏输入插件名字即可搜索并安装，非常方便：\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303182314682.webp",alt:"Img"}})]),t._v(" "),s("h2",{attrs:{id:"cos-对象存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cos-对象存储"}},[t._v("#")]),t._v(" COS 对象存储")]),t._v(" "),s("p",[t._v("COS（Cloud Object Storage，对象存储）是由腾讯云推出的一种分布式存储服务。它的特点是无目录层次结构、无数据格式限制，可容纳海量数据，支持 HTTP/HTTPS 协议访问。腾讯云 COS 的存储桶空间无容量上限，无需分区管理，适用于 CDN 数据分发、数据万象处理或大数据计算与分析的数据湖等多种场景。")]),t._v(" "),s("h3",{attrs:{id:"创建存储桶"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建存储桶"}},[t._v("#")]),t._v(" 创建存储桶")]),t._v(" "),s("p",[t._v("按需要填写各项即可，需要注意的地方是访问权限的选择，默认是"),s("strong",[t._v("私有读写，适合存储隐私机密文件")]),t._v("；本文选择了"),s("strong",[t._v("公有读私有写")]),t._v("，是因为这个存储桶主要是做图床服务，用来"),s("strong",[t._v("存储图片，并能对外提供公开访问")]),t._v("。\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303182311352.webp",alt:""}}),t._v("\n然后一直点下一步，创建即可。")]),t._v(" "),s("p",[t._v("创建成功后，来到存储桶列表，记录下"),s("strong",[t._v("存储桶的名称")]),t._v("，和"),s("strong",[t._v("所属地域的代号")]),t._v("，如图示例，也就是 "),s("code",[t._v("ap-shanghai")]),t._v("。\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303182311476.webp",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"创建-api-秘钥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建-api-秘钥"}},[t._v("#")]),t._v(" 创建 API 秘钥")]),t._v(" "),s("p",[t._v("进入【访问管理】 - 【访问秘钥】 - 【API 秘钥管理】（"),s("a",{attrs:{href:"https://console.cloud.tencent.com/cam/capi",target:"_blank",rel:"noopener noreferrer"}},[t._v("点此访问"),s("OutboundLink")],1),t._v("），会提示是否使用子账号管理，可根据实际需要进行选择，这里我们"),s("strong",[t._v("直接使用主账号进行创建")]),t._v("。\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303182311466.webp",alt:""}}),t._v("\n创建成功，将 "),s("strong",[t._v("APPID")]),t._v("，"),s("strong",[t._v("SecretId")]),t._v("，"),s("strong",[t._v("SecretKey")]),t._v(" 保存下来，非常重要，谨防外泄。\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303182311693.webp",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"配置-picgo-图床服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-picgo-图床服务"}},[t._v("#")]),t._v(" 配置 PicGo 图床服务")]),t._v(" "),s("p",[t._v("打开安装好的 PicGo 客户端，进入【图床设置】 - 【腾讯云 COS】，将上面保存的内容填写到配置中：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303182311843.webp",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("COS 版本：选择 COS v5。")]),t._v(" "),s("li",[t._v("设定 Secretld：开发者拥有的项目身份识别 ID，用于身份认证，可在 "),s("a",{attrs:{href:"https://console.cloud.tencent.com/capi",target:"_blank",rel:"noopener noreferrer"}},[t._v("API 密钥管理"),s("OutboundLink")],1),t._v(" 页面中创建和获取。")]),t._v(" "),s("li",[t._v("设定 SecretKey：开发者拥有的项目身份密钥，可在 "),s("a",{attrs:{href:"https://console.cloud.tencent.com/capi",target:"_blank",rel:"noopener noreferrer"}},[t._v("API 密钥管理"),s("OutboundLink")],1),t._v(" 页面获取。")]),t._v(" "),s("li",[t._v("设定 Bucket：存储桶，COS 中用于存储数据的容器。有关存储桶的进一步说明，请参见 "),s("a",{attrs:{href:"https://cloud.tencent.com/document/product/436/13312",target:"_blank",rel:"noopener noreferrer"}},[t._v("存储桶概述"),s("OutboundLink")],1),t._v(" 文档。")]),t._v(" "),s("li",[t._v("设定 AppId：开发者访问 COS 服务时拥有的用户维度唯一资源标识，用以标识资源，可在 "),s("a",{attrs:{href:"https://console.cloud.tencent.com/capi",target:"_blank",rel:"noopener noreferrer"}},[t._v("API 密钥管理"),s("OutboundLink")],1),t._v(" 页面获取。")]),t._v(" "),s("li",[t._v("设定存储区域：存储桶所属地域信息，枚举值可参见 "),s("a",{attrs:{href:"https://cloud.tencent.com/document/product/436/6224",target:"_blank",rel:"noopener noreferrer"}},[t._v("可用地域"),s("OutboundLink")],1),t._v(" 文档，例如 ap-beijing、ap-hongkong、eu-frankfurt 等。")]),t._v(" "),s("li",[t._v("设定存储路径：图片存放到 COS 存储桶中的路径。")]),t._v(" "),s("li",[t._v("设定自定义域名：可选，若您为上方的存储空间配置了自定义源站域名，则可填写。相关介绍可参见 "),s("a",{attrs:{href:"https://cloud.tencent.com/document/product/436/36638",target:"_blank",rel:"noopener noreferrer"}},[t._v("开启自定义源站域名"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("li",[t._v("设定网址后缀：通过在网址后缀添加 COS 数据处理参数实现图片压缩、裁剪、格式转换等操作，相关介绍可参见 "),s("a",{attrs:{href:"https://cloud.tencent.com/document/product/436/54049",target:"_blank",rel:"noopener noreferrer"}},[t._v("图片处理"),s("OutboundLink")],1),t._v("。\n其中，Bucketm，是存储桶名称")])]),t._v(" "),s("p",[t._v("存储路径，也就是图片上传后在存储桶内的目录结构，可根据需要填写。如果填写，存储桶会自动创建出对应的目录结构。注意要以 "),s("code",[t._v("/")]),t._v(" 结尾表示是一个目录。")]),t._v(" "),s("p",[t._v("自定义域名，COS 对应存储桶内的文件会有一个默认的 url，域名非常长不容易记，比如我的就是 "),s("code",[t._v("https://kunwu-1251820157.cos.ap-beijing.myqcloud.com")]),t._v("，所以 COS 支持自定义域名。如果 COS 中绑定了自定义域名（这是前提），然后再填写该项，则 PicGo 会拿到改写后的文件 url。如果没有绑定自定义域名，可以忽略该项。")]),t._v(" "),s("p",[t._v("然后点击确定，并设为默认图床。")]),t._v(" "),s("p",[t._v("然后，进入【PicGo 设置】，将【上传前重命名】、【时间戳重命名】打开，这样可以防止图片重名")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303182311956.webp",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),s("p",[t._v("打开 PicGo 上传区，选择本地的一张图片，然后上传。上传前会自动根据时间戳进行重命名，也可以自己修改：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303182311772.webp",alt:""}}),t._v("\n点击确定，图片就会进行上传了。")]),t._v(" "),s("p",[t._v("PicGo 的相册功能，会展示已经上传的图片，并提供了复制图片 url，编辑图片 url 和移除相册的基础操作。需要注意的是，仅仅是删除本地的数据，云端的图片不会受影响。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303182311313.webp",alt:""}})]),t._v(" "),s("p",[t._v("来到腾讯云 COS 控制台，进入对应的存储桶中，可以发现图片已经上传成功了：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303182311928.webp",alt:""}})]),t._v(" "),s("p",[t._v("存储桶内的每个文件都会有一个唯一的访问地址，点击【详情】查看：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303182311209.webp",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"使用图床-在-typora-粘贴图片时自动上传"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用图床-在-typora-粘贴图片时自动上传"}},[t._v("#")]),t._v(" 使用图床：在 Typora 粘贴图片时自动上传")]),t._v(" "),s("p",[t._v("打开 Typora，进入【文件】- 【偏好设置】- 【图像设置】，进行三个设置：")]),t._v(" "),s("ol",{attrs:{start:"0"}},[s("li",[t._v("插入图片时，执行上传图片操作")]),t._v(" "),s("li",[t._v("上传服务采用 PicGo(app)")]),t._v(" "),s("li",[t._v("设置 PicGo 程序的安装路径\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//imgyank-note-picgo-img-20230318225934.webp",alt:"Img"}}),t._v("\n之后，当我们使用 typora 编写 md 文档，在插入图片时，会自动唤起 PicGo 客户端，并上传图片到目标平台。")])]),t._v(" "),s("h2",{attrs:{id:"使用图床-在-yanknote-粘贴图片时自动上传"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用图床-在-yanknote-粘贴图片时自动上传"}},[t._v("#")]),t._v(" 使用图床：在 YankNote 粘贴图片时自动上传")]),t._v(" "),s("p",[t._v("打开 YankNote 左下角齿轮图标 -【图片】勾选上\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303182303509.webp",alt:"Img"}})]),t._v(" "),s("h2",{attrs:{id:"使用图床-在-obsidian-粘贴图片时自动上传"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用图床-在-obsidian-粘贴图片时自动上传"}},[t._v("#")]),t._v(" 使用图床：在 Obsidian 粘贴图片时自动上传")]),t._v(" "),s("p",[t._v("安装一款一款名为“"),s("strong",[t._v("Image auto upload plugin")]),t._v("”的 Obsidian 插件，安装后，直接使用默认设置，无需做任何更改。\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303182307558.webp",alt:"image.png"}}),t._v("\n之后，你可以将图片粘贴，或拖动到 Obsidian 中，插件和 Picgo 会自动上传图片，并在对应的位置自动插入图片链接予以展示。")]),t._v(" "),s("h2",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v("到此，一个基于腾讯云 COS + PicGo 搭建的图床服务就完成了。总结一下整个流程：")]),t._v(" "),s("ol",[s("li",[t._v("实名注册腾讯云账号，并开通 COS")]),t._v(" "),s("li",[t._v("创建存储桶，创建 API 密钥")]),t._v(" "),s("li",[t._v("本地安装 PicGo 客户端工具，并根据需要配置插件")]),t._v(" "),s("li",[t._v("在图床设置中，将各项配置都填写正确")]),t._v(" "),s("li",[t._v("结合自己常用的其他工具，比如 Typora 等使用图床服务")])]),t._v(" "),s("h1",{attrs:{id:"二、本地搭建-vuepress"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、本地搭建-vuepress"}},[t._v("#")]),t._v(" 二、本地搭建 VuePress")]),t._v(" "),s("h2",{attrs:{id:"_1-安装-node-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装-node-js"}},[t._v("#")]),t._v(" 1.  安装 Node.js")]),t._v(" "),s("p",[t._v("下载并安装 "),s("a",{attrs:{href:"https://nodejs.org/zh-cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js (opens new window)"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"_2-安装-yarn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装-yarn"}},[t._v("#")]),t._v(" 2. 安装 Yarn")]),t._v(" "),s("p",[t._v("使用命令行程序全局安装包管理器 Yarn.")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v("\n")])])]),s("h2",{attrs:{id:"_3-安装-vuepress"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-安装-vuepress"}},[t._v("#")]),t._v(" 3. 安装 VuePress")]),t._v(" "),s("p",[t._v("新建一个文件夹可以是任意名字，使用命令行程序访问到创建的项目目录。以本地依赖形式安装。后创建 /docs 目录用来后续存放需要编写的文章。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将 VuePress 作为一个本地依赖安装")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-D")]),t._v(" vuepress\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个 docs 目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" docs\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 写入内容")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'# Hello VuePress'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" docs/README.md\n")])])]),s("h2",{attrs:{id:"_4-配置-vuepress"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-配置-vuepress"}},[t._v("#")]),t._v(" 4. 配置 VuePress")]),t._v(" "),s("p",[t._v("编写脚本 修改 package.json 文件，添加一些脚本：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"docs:dev"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vuepress dev docs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"docs:build"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vuepress build docs"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("值得注意的是因为是追加内容，所以需要在本原来的最后一项后加上逗号。例如：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"devDependencies"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"vuepress"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^1.3.1"')]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"docs:dev"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vuepress dev docs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"docs:build"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vuepress build docs"')]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_5-在本地启动服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-在本地启动服务器"}},[t._v("#")]),t._v(" 5. 在本地启动服务器")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" docs:dev "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# npm run docs:dev")]),t._v("\n")])])]),s("p",[t._v("VuePress 会在 "),s("a",{attrs:{href:"http://localhost:8080/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8080"),s("OutboundLink")],1),t._v(" (opens new window) 启动一个热重载的开发服务器。")]),t._v(" "),s("h2",{attrs:{id:"基础配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础配置"}},[t._v("#")]),t._v(" 基础配置")]),t._v(" "),s("p",[t._v("在文档目录下创建一个 "),s("code",[t._v(".vuepress")]),t._v(" 目录，所有 VuePress 相关的文件都会被放在这里。此时你的项目结构可能是这样：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".\n├─ docs\n│  ├─ README.md\n│  └─ .vuepress\n│     └─ config.js\n└─ package.json\n")])])]),s("p",[t._v("在 "),s("code",[t._v(".vuepress")]),t._v(" 文件夹下添加 "),s("code",[t._v("config.js")]),t._v("，配置网站的标题和描述，方便 SEO：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'菜鸡林某の blog'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'菜鸡林某の blog'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("此时界面类似于：\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303190314281.webp",alt:"Img"}})]),t._v(" "),s("h3",{attrs:{id:"添加导航栏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加导航栏"}},[t._v("#")]),t._v(" 添加导航栏")]),t._v(" "),s("p",[t._v("我们现在在页首的右上角添加导航栏，修改 "),s("code",[t._v("config.js")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'菜鸡林某の blog'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'菜鸡林某の blog'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("themeConfig")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("nav")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("text")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'首页'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("link")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n                "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("text")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'菜鸡林某の blog'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("items")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("text")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Github'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("link")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://github.com/adrian803'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("效果如下：\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303190317062.webp",alt:"Img"}}),t._v("\n更多的配置参考 "),s("a",{attrs:{href:"https://vuepress.vuejs.org/zh/theme/default-theme-config.html#%E5%AF%BC%E8%88%AA%E6%A0%8F",target:"_blank",rel:"noopener noreferrer"}},[t._v("VuePress 导航栏"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"添加侧边栏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加侧边栏"}},[t._v("#")]),t._v(" 添加侧边栏")]),t._v(" "),s("p",[t._v("现在我们添加一些 md 文档，目前文档的目录如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\n.\n├─ docs\n│  ├─ README.md\n│  └─ .vuepress\n│     └─ config.js\n|  └─ handbook\n|     └─ 1.md\n|   └─ 2.md\n└─ package.json\n")])])]),s("p",[t._v("我们在 "),s("code",[t._v("config.js")]),t._v(" 配置如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("themeConfig")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("nav")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("sidebar")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'欢迎学习'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("collapsable")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否折叠")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博客介绍"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"基础学习"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/handbook/1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("collapsable")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否折叠")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博客搭建"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/handbook/1"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博客搭建"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/handbook/2"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("对应的效果如下：\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303190329078.webp",alt:"Img"}})]),t._v(" "),s("h3",{attrs:{id:"更换主题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更换主题"}},[t._v("#")]),t._v(" 更换主题")]),t._v(" "),s("p",[t._v("现在基本的目录和导航功能已经实现，如果还想要 "),s("code",[t._v("loading")]),t._v("效果、切换动画、模式切换（暗黑模式）、返回顶部、评论等功能呢，为了简化开发成本，我们可以直接使用主题，我使用的主题是 "),s("a",{attrs:{href:"https://vuepress-theme-reco.recoluan.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("vuepress-theme-reco"),s("OutboundLink")],1),t._v("：")]),t._v(" "),s("p",[t._v("现在我们安装 vuepress-theme-reco：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" vuepress-theme-reco --save-dev\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" vuepress-theme-reco\n")])])]),s("h1",{attrs:{id:"部署到-github"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署到-github"}},[t._v("#")]),t._v(" 部署到 GitHub")]),t._v(" "),s("p",[t._v("到这里，我们的博客网站基本搭建好了，接下来我们将它部署到 Github Pages 上。我们首先在 Github 上新建一个仓库，这里我取名为：blog。\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303190349878.webp",alt:"Img"}})]),t._v(" "),s("h2",{attrs:{id:"完善-repository"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#完善-repository"}},[t._v("#")]),t._v(" 完善 Repository")]),t._v(" "),s("ul",[s("li",[t._v("完善 "),s("code",[t._v("README.md")]),s("br"),t._v("\n在 Repository 页面完善项目信息，点击 "),s("code",[t._v("README.md")]),t._v(" 文件的编辑按钮进入编辑界面，使用 Markdown 语法编写对该项目更详细的描述。完成后点击 "),s("code",[t._v("Commit changes")]),t._v(" 按钮来提交本次修改。\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303190350894.webp",alt:"Img"}})]),t._v(" "),s("li",[t._v("编写 "),s("code",[t._v(".gitignore")]),s("br"),t._v("\n很多文件我们不需要同步到 GitHub 仓库里，使用"),s("code",[t._v(".gitignore")]),t._v("文件来标识出哪些文件或目录不需要同步。"),s("br"),t._v("\n在仓库首页点击"),s("code",[t._v("Creat new file")]),t._v("按钮进入编辑界面。输入新建的文件名："),s("code",[t._v(".gitignore")]),t._v('，并填写内容："node_modules"。（根据你使用的 IDE 不同，也许你需要添加".vs" 或者 ".idea" 等内容来避免同步 IDE 独特的项目信息，请根据需求自行添加。）'),s("br"),t._v("\n完成后点击 "),s("code",[t._v("Commit changes")]),t._v(" 按钮来提交本次修改。\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303190353209.webp",alt:"Img"}})])]),t._v(" "),s("h2",{attrs:{id:"安装和配置-git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装和配置-git"}},[t._v("#")]),t._v(" 安装和配置 Git")]),t._v(" "),s("ul",[s("li",[t._v("安装并部署你的 Git"),s("br"),t._v("\n下载并安装相关的程序，运行并配置你的账户。你可以根据廖雪峰老师的这个教程来安装。"),s("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496",target:"_blank",rel:"noopener noreferrer"}},[t._v("廖雪峰的官方网站 - 安装 Git(opens new window)"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("建立本地和远程仓库的连接"),s("br"),t._v("\n生成本地 SSH Key，并提交 GitHub。使用命令关联远程仓库。"),s("br"),t._v("\n具体请参考："),s("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/896043488029600/896954117292416",target:"_blank",rel:"noopener noreferrer"}},[t._v("廖雪峰的官方网站 - 远程仓库 (opens new window)"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("本地仓库初始化"),s("br"),t._v("\n在本地仓库的根目录下，使用命令初始化本地仓库。"),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("repo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里的 repo 是你的仓库地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"init"')]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"利用-github-actions-自动部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#利用-github-actions-自动部署"}},[t._v("#")]),t._v(" 利用 GitHub Actions 自动部署")]),t._v(" "),s("h3",{attrs:{id:"生成-token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成-token"}},[t._v("#")]),t._v(" 生成 token")]),t._v(" "),s("p",[t._v("进入 Github 后，点击我们的头像，然后依次进入 Settings -> Developer settings -> Personal access tokens，对应地址就是 Token 生成：\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303190624698.webp",alt:"Img"}}),t._v(" "),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303190625173.webp",alt:"Img"}}),t._v(" "),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303190626738.webp",alt:"Img"}})]),t._v(" "),s("h3",{attrs:{id:"配置-secrets"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-secrets"}},[t._v("#")]),t._v(" 配置 secrets")]),t._v(" "),s("p",[t._v("进入你存放你博客源码的项目，然后以此点击 Settings -> Secrets，接着点击右上角的 New repository secret，新建一个 Secret。这里的名字要命名为 ACCESS_TOKEN，然后 Value 就是我们上一步中所生成的 Token。\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303190629371.webp",alt:"Img"}}),t._v(" "),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303190630744.webp",alt:"Img"}}),t._v("\n设置好之后效果：\n"),s("img",{attrs:{src:"https://picgo-1257745309.cos.ap-shanghai.myqcloud.com//img202303190630412.webp",alt:"Img"}})]),t._v(" "),s("h3",{attrs:{id:"编写-action"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编写-action"}},[t._v("#")]),t._v(" 编写 action")]),t._v(" "),s("p",[t._v("进入项目的的 Actions 选项，然后新建一个 workflow，默认新建的 workflow 名字是 main.yml 这个自定义。内容参考下面")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# name 可以自定义")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deploy GitHub Pages\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 触发条件：在 push 到 main/master 分支后，新的 Github 项目 应该都是 main，而之前的项目一般都是 master")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 任务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build-and-deploy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 服务器环境：最新版 Ubuntu")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拉取代码")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Checkout\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v2\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persist-credentials")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成静态文件")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Build\n        run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("npm install "),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("&&")]),t._v(" npm run docs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("build\n\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署到 GitHub Pages")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deploy\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" JamesIves/github"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deploy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@4.1.3 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ACCESS_TOKEN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.ACCESS_TOKEN "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 也就是我们刚才生成的 secret")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("BRANCH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pages "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署到 gh-pages 分支，因为 main 分支存放的一般是源码，而 gh-pages 分支则用来存放生成的静态文件")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("FOLDER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docs/.vuepress/dist "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vuepress 生成的静态文件存放的地方")]),t._v("\n")])])]),s("p",[t._v("填写完毕点击 Add secret，如果填写没有问题的话，点击之后就会提示添加成功。\n每次当你将 "),s("code",[t._v("Vuepress")]),t._v(" 项目提交到 "),s("code",[t._v("Github")]),t._v(" 上的时候，"),s("code",[t._v("Github")]),t._v(" 就会自动帮你部署项目。")])])}),[],!1,null,null,null);s.default=r.exports}}]);